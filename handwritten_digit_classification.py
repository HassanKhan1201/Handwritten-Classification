# -*- coding: utf-8 -*-
"""Handwritten Digit Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16IeXm2IKtc7XR9WULfL_txTEfrov7pio

# Project : Handwritten Digit Classification
-Dataset : Mnist

-Acuracy :  0.9761
"""

!pip install tensorflow

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten

(X_train,y_train),(X_test,y_test) = keras.datasets.mnist.load_data()

X_test.shape

y_train

import matplotlib.pyplot as plt
plt.imshow(X_train[5])

X_train = X_train/255
X_test = X_test/255

X_train[0]

model = Sequential()

model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu'))
model.add(Dense(32,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(loss='sparse_categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

history = model.fit(X_train,y_train,epochs=22,validation_split=0.2)

y_prob = model.predict(X_test)

y_pred = y_prob.argmax(axis=1)

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test,y_pred)
print("Acuracy : ", accuracy)

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])

plt.imshow(X_test[7])

model.predict(X_test[7].reshape(1,28,28)).argmax(axis=1)